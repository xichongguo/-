name: Update TVBox Config

on:
  workflow_dispatch:
  schedule:
    - cron: "0 23,9 * * *"  # ÊØèÂ§© 07:00 Âíå 17:00 UTC+8

permissions:
  contents: write

jobs:
  update-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          pip install requests

      - name: Fetch and Update Config
        run: |
          python << 'EOF'
          import requests
          import json
          from datetime import datetime

          # Ê∫êÈÖçÁΩÆÂú∞ÂùÄ
          CONFIG_URL = "http://cdn.qiaoji8.com/tvbox.json"
          # ‚úÖ ËæìÂá∫Êñá‰ª∂ÂêçÔºöÊãºÈü≥
          OUTPUT_FILE = "xichongyingshi.json"

          # ‚úÖ Áõ¥Êí≠Ê∫êÔºöÂêçÁß∞Êîπ‰∏∫ xichongtv
          NEW_LIVE = {
              "name": "xichongtv",
              "type": 3,
              "url": "https://raw.githubusercontent.com/xichongguo/live-stream/refs/heads/main/live/current.m3u8",
              "epg": "https://epg.zbds.top/",
              "logo": "",
              "categories": "Â§ÆËßÜ,Âç´ËßÜ,‰ΩìËÇ≤,ÁîµÂΩ±,ÁªºËâ∫,Âú∞Êñπ"
          }

          try:
              res = requests.get(CONFIG_URL, headers={'User-Agent': 'TVBox-Updater'}, timeout=10)
              res.raise_for_status()
              data = res.json()
              print("‚úÖ Successfully fetched remote config")
          except Exception as e:
              print(f"‚ùå Failed to fetch config: {e}")
              exit(1)

          # ‚úÖ Âº∫Âà∂ËÆæÁΩÆÂΩ±ËßÜÁ´ôÔºàÈò≤Ê≠¢ÂéüÂßãÈÖçÁΩÆÊó† sitesÔºâ
          data['sites'] = [
              {
                  "key": "xichong",
                  "name": "Ë•øÂÖÖÂΩ±ËßÜ",  # ÊòæÁ§∫ÂêçÁß∞‰ªç‰∏∫‰∏≠Êñá
                  "type": 1,
                  "api": "http://cdn.qiaoji8.com/tvbox.php",
                  "searchable": 1,
                  "quickSearch": 1,
                  "filterable": 1
              }
          ]
          print("‚úÖ Site set to Ë•øÂÖÖÂΩ±ËßÜ")

          # ‚úÖ Ê∏ÖÁ©∫ spider Èò≤Ê≠¢ TVBox Â¥©Ê∫É
          if 'spider' in data:
              data['spider'] = ""
              print("üîß Cleared spider field")

          # Á°Æ‰øù lives Â≠òÂú®
          if 'lives' not in data:
              data['lives'] = []
              print("üîß Initialized lives list")

          # Ê∑ªÂä†Áõ¥Êí≠Ê∫êÔºàÈÅøÂÖçÈáçÂ§çÔºâ
          if not any(l.get('url') == NEW_LIVE['url'] for l in data['lives']):
              data['lives'].append(NEW_LIVE)
              print("‚úÖ Live source added: xichongtv")  # ‚úÖ Êó•Âøó‰πüÊîπ‰∏∫ xichongtv

          # Áªü‰∏ÄËÆæÁΩÆ EPG
          for live in data.get('lives', []):
              if 'epg' in live:
                  live['epg'] = "https://epg.zbds.top/"

          # ‚úÖ Êõ¥Êñ∞Â£ÅÁ∫∏ÔºåÊòæÁ§∫ÊãºÈü≥Êñá‰ª∂ÂêçÂíåÊó∂Èó¥
          if 'wallpaper' in data:
              data['wallpaper'] = f"xichongyingshi - {datetime.now().strftime('%m-%d %H:%M')}"

          # ‰øùÂ≠òÊñá‰ª∂
          try:
              with open(OUTPUT_FILE, 'w', encoding='utf-8') as f:
                  json.dump(data, f, ensure_ascii=False, indent=2)
              print(f"‚úÖ Config saved: {OUTPUT_FILE}")
          except Exception as e:
              print(f"‚ùå Failed to save file: {e}")
              exit(1)
          EOF

      - name: Commit and Push
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          # ‚úÖ Ê∑ªÂä†Êñ∞Êñá‰ª∂Âêç
          git add xichongyingshi.json
          git commit -m "üîÑ Update: xichongyingshi.json [$(date '+%Y%m%d%H%M%S')]" --allow-empty
          git push
