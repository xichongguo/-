name: Update TVBox Config

on:
  workflow_dispatch:
  schedule:
    - cron: "0 23,9 * * *"  # UTC+8 07:00 & 17:00

permissions:
  contents: write

jobs:
  update-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          pip install requests

      - name: Fetch and Update Config
        run: |
          python << 'EOF'
          import requests
          import json
          from datetime import datetime

          # ✅ 双源配置（主源 + GitHub 备份）
          SOURCES = [
              "http://cdn.qiaoji8.com/tvbox.json",
              "https://raw.githubusercontent.com/xichongguo/tvbox-backup/main/tvbox.json"
          ]

          OUTPUT_FILE = "xichongyingshi.json"

          NEW_LIVE = {
              "name": "xichongtv",
              "type": 3,
              "url": "https://raw.githubusercontent.com/xichongguo/live-stream/refs/heads/main/live/current.m3u8",
              "epg": "https://epg.zbds.top/",
              "logo": "",
              "categories": "央视,卫视,体育,电影,综艺,地方"
          }

          def fetch_from_sources():
              for url in SOURCES:
                  try:
                      print(f"📡 尝试获取: {url}")
                      res = requests.get(url, headers={'User-Agent': 'TVBox-Updater'}, timeout=15)
                      res.raise_for_status()
                      if res.text.strip().startswith('{') or res.text.strip().startswith('['):
                          return res.json()
                      else:
                          print(f"⚠️  返回非 JSON: {res.text[:100]}...")
                  except Exception as e:
                      print(f"❌ 失败: {url} -> {e}")
              return None

          try:
              data = fetch_from_sources()
              if not data:
                  print("💀 所有源均失败，终止")
                  exit(1)
              print("✅ 成功获取配置")
          except Exception as e:
              print(f"❌ 获取配置失败: {e}")
              exit(1)

          # 强制设置影视站
          data['sites'] = [
              {
                  "key": "xichong",
                  "name": "西充影视",
                  "type": 1,
                  "api": "http://cdn.qiaoji8.com/tvbox.php",
                  "searchable": 1,
                  "quickSearch": 1,
                  "filterable": 1
              }
          ]
          print("✅ 影视站已设置")

          # 清空 spider
          if 'spider' in data:
              data['spider'] = ""
              print("🔧 spider 已清空")

          if 'lives' not in data:
              data['lives'] = []

          if not any(l.get('url') == NEW_LIVE['url'] for l in data['lives']):
              data['lives'].append(NEW_LIVE)
              print("✅ 直播源已添加: xichongtv")

          for live in data.get('lives', []):
              if 'epg' in live:
                  live['epg'] = "https://epg.zbds.top/"

          if 'wallpaper' in data:
              data['wallpaper'] = f"xichongyingshi - {datetime.now().strftime('%m-%d %H:%M')}"

          try:
              with open(OUTPUT_FILE, 'w', encoding='utf-8') as f:
                  json.dump(data, f, ensure_ascii=False, indent=2)
              print(f"✅ 文件已生成: {OUTPUT_FILE}")
          except Exception as e:
              print(f"❌ 文件写入失败: {e}")
              exit(1)
          EOF

      - name: Commit and Push
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add xichongyingshi.json
          git commit -m "🔄 Update: xichongyingshi.json [$(date '+%Y%m%d%H%M%S')]" --allow-empty
          git push
